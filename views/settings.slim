.layout-centered-small
  == render_with_globals :_breadcrumb
  h1= title
  p #{I18n.translate('settingsIntroLabel', current_locale.code)}

  - if success
    .status-block.status-block--success
      svg.status-block__icon.status-block__icon--success
        use(xlink:href='/icons/icons.svg#success')
      .status-block__content
        .status-block__title #{I18n.translate('changesSavedLabel', current_locale.code)}

  - if has_errors
    .status-block.status-block--error
      svg.status-block__icon.status-block__icon--error
        use(xlink:href='/icons/icons.svg#error')
      .status-block__content
        .status-block__title #{I18n.translate('errorOccurredTitleLabel', current_locale.code)}
        .status-block__message #{I18n.translate('errorOccurredMessageLabel', current_locale.code)}

  - if space && !has_errors
    .status-block.status-block--info
      svg.status-block__icon.status-block__icon--info
        use(xlink:href='/icons/icons.svg#info')

      - if !is_using_custom_credentials
        .status-block__content
          .status-block__message
            p
              em= I18n.translate("usingServerCredentialsLabel", current_locale.code)
            p
              strong= "#{I18n.translate("connectedToSpaceLabel", current_locale.code)}:"
              br
              = "#{space.name} (#{space_id})"
            p
              strong= "#{I18n.translate("credentialSourceLabel", current_locale.code)}:"
              br
              = "#{I18n.translate("loadedFromLocalFileLabel", current_locale.code)} "
              a(href="https://github.com/contentful/the-example-app.rb/blob/master/.env" target="_blank" rel="noopener") .env
            p
              em= I18n.translate("overrideConfigLabel", current_locale.code)
      - else
        .status-block__content
          .status-block__message
            p
              em= I18n.translate("usingSessionCredentialsLabel", current_locale.code)
            p
              strong= I18n.translate("connectedToSpaceLabel", current_locale.code)
              br
              = "#{space.name} (#{space_id})"
            form.form(action="/settings/reset#{query_string}" method="post")
              p
                strong= I18n.translate("applicationCredentialsLabel", current_locale.code)
                br
                button(type="submit")= I18n.translate("resetCredentialsLabel", current_locale.code)
                br
                - share_address = "#{host}/#{query_string}#{ query_string.empty? ? '?' : '&'}space_id=#{space_id}&preview_token=#{preview_token}&delivery_token=#{delivery_token}#{editorial_features ? '&editorial_features=enabled' : ''}"
                a.status-block__sharelink(href=share_address)
                  = I18n.translate("copyLinkLabel", current_locale.code)
            p
              em= I18n.translate("overrideConfigLabel", current_locale.code)

  form.form(action="/settings#{query_string}" method="post")
    .form-item
      label(for="input-space-id") #{I18n.translate('spaceIdLabel', current_locale.code)}
      input(type="text" name="spaceId" id="input-space-id" value=space_id required="required")
      - if errors.include?(:spaceId)
        == render_with_globals :_renderErrors, locals: { errors: errors[:spaceId] }
      .form-item__help-text #{I18n.translate('spaceIdHelpText', current_locale.code)}

    .form-item
      label(for="input-delivery-token") #{I18n.translate('cdaAccessTokenLabel', current_locale.code)}
      input(type="text" name="deliveryToken" id="input-delivery-token" value=delivery_token required="required")
      - if errors.include?(:deliveryToken)
        == render_with_globals :_renderErrors, locals: { errors: errors[:deliveryToken] }
      .form-item__help-text
        | #{I18n.translate('contentDeliveryApiHelpText', current_locale.code)}&nbsp;
        a(href='https://www.contentful.com/developers/docs/references/content-delivery-api/' target='_blank' rel='noopener') Content Delivery API.

    .form-item
      label(for="input-preview-token") #{I18n.translate('cpaAccessTokenLabel', current_locale.code)}
      input(type="text" name="previewToken" id="input-preview-token" value=preview_token required="required")
      - if errors.include?(:previewToken)
        == render_with_globals :_renderErrors, locals: { errors: errors[:previewToken] }
      .form-item__help-text
        | #{I18n.translate('contentPreviewApiHelpText', current_locale.code)}&nbsp;
        a(href='https://www.contentful.com/developers/docs/references/content-preview-api/' target='_blank' rel='noopener') Content Preview API.

    .form-item
      input(type="checkbox" name="editorialFeatures" id="input-editorial-features" checked=editorial_features)
      label(for="input-editorial-features") #{I18n.translate('enableEditorialFeaturesLabel', current_locale.code)}
      .form-item__help-text #{I18n.translate('enableEditorialFeaturesHelpText', current_locale.code)}

    .form-item
      input.cta(type="submit" value=I18n.translate('saveSettingsButtonLabel', current_locale.code))
